# 1. 可变类型和不可变类型
#    不可变: 当改变变量的值时, 变量名指向的地址发生变化             类型: int  str  float  bool  tuple
#    可变: 当变量里面的内容发生变化时, 变量名指向的内存并没有发生变化  类型: list dict set

# 举例

# 不可变类型示例
x = 5
y = x  # y现在指向值为5的对象
x = 6  # 创建一个新的整数对象，并将x指向该对象
print(x)  # 输出6
print(y)  # 输出5，因为y仍然指向原来的整数对象, 该空间的内存仍然存的是5

# 可变类型示例
my_list = [1, 2, 3]
your_list = my_list  # your_list现在指向my_list的对象
my_list[0] = 4  # 修改my_list中的第一个元素
print(my_list)  # 输出[4, 2, 3]
print(your_list)  # 输出[4, 2, 3]，因为your_list和my_list指向同一个列表对象


# 2. 全局变量和局部变量

"""
在Python中，变量可以是全局变量或局部变量，这取决于它们在代码中的定义和使用方式。
全局变量是在程序的顶层定义的变量，可以在程序中的任何位置被访问和使用。
当你在函数内部使用一个全局变量时，Python会首先搜索函数内部的局部变量，如果没有找到，Python就会搜索全局变量。
如果要在函数内修改全局变量的值，需要在函数中使用 global 关键字声明变量。
"""
# 举例1
x = 10  # 定义全局变量 x


def foo():
    print(x)  # 访问全局变量 x


foo()  # 输出 10

# 局部变量是在函数内部定义的变量，只能在函数内部使用。当函数完成执行时，局部变量会被销毁。


# 举例2

def foo():
    y = 20  # 定义局部变量 y
    print(y)


foo()  # 输出 20
print(y)  # 报错，y 未定义

# 需要注意的是，在Python中，函数参数也是局部变量。当函数被调用时，参数作为函数的局部变量被创建，当函数完成执行时，这些局部变量也会被销毁。













