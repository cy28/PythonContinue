"""
__new__构造方法
触发时机： 在实例化对象时触发
参数：一个cls接收当前类, 其他参数根据实例化的参数决定
返回值：必须返回一个对象实例
作用：管理和控制对象的生成过程
注意：实例化对象是Object类底层实现，其他类继承了Object的__new__才能够实现实例化对象。
先触发__new__才会触发__init__
"""

# 对象里面的__new__方法是控制对象的生成过程, 传入cls, 加对象的参数
# 而object.__new__方法有制作对象的方法, 传入参数是对象所在的类名


class Human:
    def __new__(cls, sex):
        # print('new方法被触发')
        # 自己控制对象的生成, 要求女的生, 男的不生
        if sex == '女':
            # 生成对象并返回, 制作对象的方法就在object__new__里面
            return object.__new__(Human)  # 这里写cls也行 也可以写其他的类, 但是一般不推荐
        else:
            pass

    def eat(self):
        print('吃饭方法')

    def run(self):
        print('跑步方法')

    def sleep(self):
        print('睡觉方法')


# 实例化对象
h1 = Human('女')
# 这一步触发了new方法 两步操作, 1. 制作一个对象(相当于有一块对象所在的内存空间), 2. 为对象初始化操作 实际上是在第一步被触发
# 因为这里对象(实例)还没有制作完成, 所以传不了self, 所以传的是cls
print(h1)
























