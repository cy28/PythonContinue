list1 = ['火腿肠', '酸奶', '酸奶', '辣条', '面包', '薯条', '酸奶', '酸奶']

# 由于remove() 一次只能删除一个元素, 如果我们想删除列表中所有的酸奶的这个元素, 得采用循环的方式
# list1.remove('酸奶')
# print(list1)  # ['火腿肠', '酸奶', '辣条', '面包', '薯条', '酸奶', '酸奶']

# 第1种方式 for循环 (存在问题)
# for i in list1:
#     if i == '酸奶':
#         list1.remove(i)
#
# print(list1)  # ['火腿肠', '辣条', '面包', '薯条', '酸奶', '酸奶']

# 注意这里遍历完成后, 将前面两个酸奶删除了,这是因为当符合删除条件后, remove每次都删除的第一个出现的选定元素
# 而第二个酸奶, 在第一次删除后被跳过了, 所以当后面符合删除条件时,它位于第一个出现的位置,于是被删除
# for循环的问题在于, 1号位置的酸奶被删除后, 2号位置的酸奶, 位置变成了1号, Python认为已经赋值过来,于是跳过了这个酸奶


# 第2种方式 while循环
n = 0
while n < len(list1):
    if list1[n] == '酸奶':
        list1.remove('酸奶')  # 这里不对n进行变化, 移除位置的元素之后, 还从该位置进行检查
    else:
        n += 1
print(list1)  # ['火腿肠', '辣条', '面包', '薯条']


# 第3种方式 for循环 (倒着删除元素)

list2 = [2, 1, '酸奶', '酸奶', 1]
for j in list2[::-1]:
    if j == '酸奶':
        list2.remove(j)

print(list2)  # [2, 1, 1]

# 这是由于我们是倒着对列表进行遍历的, 0 1 2 3 4
# 先4 1不是酸奶
# 再3 是酸奶 执行删除, 把2位置先出现的酸奶给删了
# 再2 原来3位置的酸奶, 到了2位置, 是酸奶, 执行删除操作











